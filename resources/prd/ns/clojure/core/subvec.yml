added: '1.0'
ns: clojure.core
name: subvec
file: clojure/core.clj
static: true
column: 1
line: 3844
arglists:
- [v, start]
- [v, start, end]
doc: |-
  Returns a persistent vector of the items in vector from
    start (inclusive) to end (exclusive).  If end is not supplied,
    defaults to (count vector). This operation is O(1) and very fast, as
    the resulting vector shares structure with the original and no
    trimming is done.

c/category: collection
c/source: |
  ([v start]
   (subvec v start (count v)))
  ([v start end]
   (. clojure.lang.RT (subvec v start end)))
c/fn-notation: |
  f(x, s, e = \infty) =
  [x_i \text{ for all $i$ where } s \leq i < e]
