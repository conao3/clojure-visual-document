arglists:
- [m, f]
doc: |-
  m f => {(f k) v ...}

    Given a map m and a function f of 1-argument, returns a new map whose
    keys are the result of applying f to the keys of m, mapped to the
    corresponding values of m.
    f must return a unique key for each key of m, else the behavior is undefined.
added: '1.11'
line: 8148
column: 1
file: clojure/core.clj
name: update-keys
ns: clojure.core

c/cateogry: collection
c/source: |
  (let [ret (persistent!
             (reduce-kv (fn [acc k v] (assoc! acc (f k) v))
                        (transient {})
                        m))]
    (with-meta ret (meta m)))
c/fn-notation: |
  f(\{k_1: v_1, \dots, k_n: v_n\}, t) =
  \{t(k_1): v_1, \dots, t(k_n): v_n\}
