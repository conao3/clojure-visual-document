added: '1.0'
ns: clojure.core
name: merge
file: clojure/core.clj
static: true
column: 1
line: 3065
arglists:
- ['&', maps]
doc: |-
  Returns a map that consists of the rest of the maps conj-ed onto
    the first.  If a key occurs in more than one map, the mapping from
    the latter (left-to-right) will be the mapping in the result.

c/category: collection
c/source: |
  (when (some identity maps)
    (reduce1 #(conj (or %1 {}) %2) maps))
c/impl: |
  (defn c-merge [& m]
    (reduce conj m))
c/fn-notation: |
  f(\&m) =
  \text{reduce}(\text{conj}, \text{\{\}}, m)
